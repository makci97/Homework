Задание, для которого был реализован thread_pool.

Реализуйте пул потоков из задачи 1 домашнего задания https://clck.ru/9ozyw.
Пул потоков должен представлять из себя шаблонный класс следующего вида:
template <class Value>   
class thread_pool {   
public:   
    explicit thread_pool(size_t num_workers);   
    std::future<Value> submit(std::function<Value()>);   
    void shutdown();   
};
Параметр num_workers определяет число потоков в пуле.
Метод std::future<Value()> submit(std::function<Value()>) добавляет задачу в конец очереди пула, возвращая future, через которое можно получить результат выполнения задачи. Ожидаемое поведение и инварианты:
все добавленные через submit задачи будут выполнены пулом;
пул будет выполнять задачи, используя ровно num_workers потоков;
после вызова shutdown любой вызов метода submit должен кидать исключение.
Метод void shutdown() переводит пул в режим завершения работы. Ожидаемое поведение и инварианты:
метод shutdown блокируется до завершения обработки всех добавленных в очередь пула задач;
после вызова shutdown любой вызов submit кидает исключение;
все добавленные в пул до вызова shutdown задачи будут выполнены до выхода из shutdown.
Про класс Value, которым параметризована очередь, известно, что он имеет конструктор по умолчанию, конструкторы перемещения и копирования и операторы перемещения и копирования.
